% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/simBulk.R
\name{generateTrainAndTestBulkProbMatrix}
\alias{generateTrainAndTestBulkProbMatrix}
\title{Generate training and test cell composition matrix.}
\usage{
generateTrainAndTestBulkProbMatrix(
  object,
  cell.type.column,
  prob.design,
  proportions.train = c(10, 5, 20, 15, 10, 40),
  proportions.test = c(10, 5, 20, 15, 10, 40),
  train.freq = 2/3,
  n.cells = 100,
  num.bulk.samples = NULL,
  exclusive.types = NULL,
  verbose = TRUE
)
}
\arguments{
\item{object}{\code{DigitalDLSorter} object with \code{single.cell.real} and
\code{zinb.params} slots.}

\item{cell.type.column}{Name or number of the column in cells metadata
corresponding with the cell type of each cell.}

\item{prob.design}{\code{data.frame} with the frequency ranges expected for
each cell type present in the experiment. This information can be estimated
from literature or from the single-cell experiment itself. This
\code{data.frame} must be built by three columns with specific headers:
\itemize{ \item A cell type column with the same name of the cell type
column in cells.metadata. If the name of the column is not the same,
function returns an error. Cell types must appear on cells.metadata. \item
A second column named 'from' with the start frequency for each cell type.
\item A third column named 'to' with the final frequency for each cell
type.}}

\item{proportions.train}{Vector of five integer numbers that determine the
proportions of bulk samples that will be generated by the methods explained
in details in train samples. This vector represents proportions, so they
must add 100 and none can be less than 1. By default, a majority of random
samples without using predefined ranges will be generated.}

\item{proportions.test}{As \code{proportions.train} for test samples.}

\item{train.freq}{Proportion of cells used for training set (2/3 by default).}

\item{n.cells}{Number of cells that are aggregated in order to simulate one
bulk RNA-seq sample (100 by default).}

\item{num.bulk.samples}{Integer which allows to establish the number of bulk
samples that will be generated taking into account training and test data.
If it is NULL (by default), approximately 18 more samples will be formed
than there are cells in \code{single.cell.final} slot.}

\item{exclusive.types}{Vector of cell types which allows to establish cell
types that biologically do not make sense to be mixed during the generation
of bulk samples. Some samples presents this exclusive cell types. If it is
equal to NULL (by default), all cell types will be mixed when generating
bulk samples.}

\item{verbose}{Show informative messages during the execution.}
}
\value{
A \code{\link{DigitalDLSorter}} object with \code{prob.cell.types}
slot containing a \code{\link{ProbMatrixCellTypes}} object. For more
information about the structure of this class, see
\code{\link{ProbMatrixCellTypes}}. The most important element is the cell
composition matrix, which is formed by \eqn{n} rows (being \eqn{n} the
number of bulk samples that will be generated) and \eqn{k} columns (being
\eqn{k} the number of cell types present in the experiment).
}
\description{
Generate training and test cell composition matrices for the simulation of
bulk samples with known cell composition using single-cell expression
profiles. The resulting matrix will determine the proportion of the different
cell types that will form the simulated bulk samples.
}
\details{
First of all, simulated single-cell profiles are split into training and test
subsets (2/3 for training and 1/3 for test by default). Then, to avoid biases
due to the composition of bulk samples, proportions for the mixtures (bulk
samples) of cell types (\eqn{w_1,...,w_k}, where \eqn{k} is the number of
cell types available in single-cell profiles), are randomly generated using
five different approaches:

\enumerate{ \item Cell proportions are randomly sampled from a truncated
uniform distribution with predefined limits according to a priori knowledge
of the abundance of each cell type (see \code{prob.design} argument). This
information ban be inferred from the single cell analysis itself or from the
literature. \item A second set is generated by randomly permuting cell type
labels from a distribution generated by the previous method. \item Cell
proportions are randomly sampled as by method 1 without replacement. \item
Using the last method for generating proportions, cell types labels are
randomly sampled. \item Cell proportions are randomly sampled from a
Dirichlet distribution. }

If you want to see the distribution of cell type proportions generated by
each method during the process, you can access them with
\code{\link{showProbPlot}} function (see examples).

It is important to note that the number of bulk-samples simulated are
determined in this step. You can predefine the number of bulk profiles
generated using \code{num.bulk.samples} argument. By default, the number of
bulk samples generated depends on the number of single-cell profiles
available: approximately 18 more samples will be formed than there are cells
in \code{single.cell.final}. We recommend set a number of 30000 samples. This
number will be split in training and test data: 60\% for training and 40\% for
evaluating the model.
}
\examples{
## generate a data.frame with frequency ranges of each cell type
probMatrix <- data.frame(
  Cell_type = c("ER+", "HER2+", "ER+ and HER2+", "TNBC",
                 "Stromal", "Monocyte", "Tme", "BGC",
                 "Bmem", "DC", "Macrophage", "TCD8", "Treg"),
  from = c(rep(30, 4), 1, rep(0, 8)),
  to = c(rep(70, 4), 50, rep(15, 8))
)
DDLSSmallCompleted <- generateTrainAndTestBulkProbMatrix(
  object = DDLSSmallCompleted,
  cell.type.column = "Cell_type",
  prob.design = probMatrix,
  num.bulk.samples = 200,
  verbose = TRUE
)

}
\references{
Torroja, C. y SÃ¡nchez-Cabo, F. (2019). digitalDLSorter: A Deep
Learning algorithm to quantify immune cell populations based on scRNA-Seq
data. Frontiers in Genetics 10, 978. doi: \url{10.3389/fgene.2019.00978}
}
\seealso{
\code{\link{generateBulkSamples}} \code{\link{ProbMatrixCellTypes}}
}
